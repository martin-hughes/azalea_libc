Import('libc_env')

dependencies = [
    "crt/crt1.c",

    Glob("src/complex/*.c"),

    "src/dirent/alphasort.c",
    "src/dirent/closedir.c",
    #"src/dirent/fdopendir.c",
    "src/dirent/opendir.c",
    "src/dirent/readdir_r.c",
    "src/dirent/readdir.c",
    "src/dirent/rewinddir.c",
    #"src/dirent/scandir.c",
    #"src/dirent/seekdir.c",
    "src/dirent/telldir.c",
    "src/dirent/versionsort.c",

    "src/env/__environ.c",
    "src/env/__init_tls.c",
    "src/env/__libc_start_main.c",
    "src/env/clearenv.c",
    "src/env/getenv.c",
    "src/env/putenv.c",
    "src/env/setenv.c",
    "src/env/unsetenv.c",

    "src/errno/strerror.c",

    "src/exit/_Exit.c",
    "src/exit/abort.c",
    "src/exit/assert.c",
    "src/exit/atexit.c",
    "src/exit/exit.c",

    Glob("src/fenv/*.c"),
    Glob("src/fenv/x86_64/*.s"),

    "src/internal/floatscan.c",
    "src/internal/libc.c",
    "src/internal/syscall_ret.c",

    "src/ldso/dladdr.c",
    "src/ldso/dl_iterate_phdr.c",

    Glob("src/locale/*.c"),

    "src/malloc/expand_heap.c",
    "src/malloc/malloc.c",
    "src/malloc/memalign.c",

    Glob("src/math/*.c"),
    Glob("src/math/x86_64/*.s"),

    #These probably shouldn't be part of libc...
    "src/misc/dirname.c",
    "src/misc/getopt.c",
    "src/misc/getopt_long.c",
    "src/misc/ioctl.c",

    "src/mman/madvise.c",
    "src/mman/mmap.c",
    "src/mman/mremap.c",
    "src/mman/munmap.c",

    Glob("src/multibyte/*.c"),

    Glob("src/regex/*.c"),

    "src/sched/sched_yield.c",

    # Be aware that some of these functions are part of the 'core' library.
    "src/stdio/__fmodeflags.c",
    "src/stdio/__fdopen.c",
    "src/stdio/__overflow.c",
    "src/stdio/__stdio_close.c",
    "src/stdio/__stdio_read.c",
    "src/stdio/__stdio_seek.c",
    "src/stdio/__stdio_write.c",
    "src/stdio/__string_read.c",
    "src/stdio/fclose.c",
    "src/stdio/feof.c",
    "src/stdio/ferror.c",
    "src/stdio/fflush.c",
    "src/stdio/fgetc.c",
    "src/stdio/fgets.c",
    "src/stdio/fileno.c",
    "src/stdio/flockfile.c",
    "src/stdio/fopen.c",
    "src/stdio/fprintf.c",
    "src/stdio/fputc.c",
    "src/stdio/fputs.c",
    "src/stdio/fputwc.c",
    "src/stdio/fread.c",
    "src/stdio/fscanf.c",
    "src/stdio/fseek.c",
    "src/stdio/ftell.c",
    "src/stdio/fwide.c",
    "src/stdio/funlockfile.c",
    "src/stdio/getc.c",
    "src/stdio/getc_unlocked.c",
    "src/stdio/getchar.c",
    "src/stdio/getchar_unlocked.c",
    "src/stdio/getdelim.c",
    "src/stdio/getline.c",
    "src/stdio/ofl_add.c",
    "src/stdio/perror.c",
    "src/stdio/printf.c",
    "src/stdio/putc.c",
    "src/stdio/putchar.c",
    "src/stdio/puts.c",
    "src/stdio/remove.c",
    "src/stdio/rewind.c",
    "src/stdio/scanf.c",
    "src/stdio/sscanf.c",
    "src/stdio/stderr.c",
    "src/stdio/stdin.c",
    "src/stdio/stdout.c",
    "src/stdio/swprintf.c",
    "src/stdio/ungetc.c",
    "src/stdio/vfscanf.c",
    "src/stdio/vfwprintf.c",
    "src/stdio/vprintf.c",
    "src/stdio/vscanf.c",
    "src/stdio/vsscanf.c",
    "src/stdio/vsprintf.c",
    "src/stdio/vswprintf.c",

    Glob("src/temp/*.c"),

    "src/thread/x86_64/__set_thread_area.cpp",
    "src/thread/__lock.c",
    "src/thread/__wait.c",
    "src/thread/tid_manager.c",

    # This is all the files in the 'time' directory with the ones we don't support commented out.
    "src/time/__asctime.c",
    "src/time/__map_file.c",
    "src/time/__month_to_secs.c",
    "src/time/__secs_to_tm.c",
    "src/time/__tm_to_secs.c",
    "src/time/__tz.c",
    "src/time/__year_to_secs.c",
    "src/time/asctime.c",
    "src/time/asctime_r.c",
    "src/time/clock.c",
    #"src/time/clock_getcpuclockid.c", # We only support the time of day clock so far.
    #"src/time/clock_getres.c", # Simply not implemented yet.
    "src/time/clock_gettime.c",
    #"src/time/clock_nanosleep.c", # Probably could implmenet with a new 'sleep' system call.
    #"src/time/clock_settime.c", # Kernel can't set the time yet.
    "src/time/ctime.c",
    "src/time/ctime_r.c",
    "src/time/difftime.c",
    "src/time/ftime.c",
    #"src/time/getdate.c", # Calls pthread functions to prevent cancellation. Pthread is not yet supported.
    "src/time/gettimeofday.c",
    "src/time/gmtime.c",
    "src/time/gmtime_r.c",
    "src/time/localtime.c",
    "src/time/localtime_r.c",
    "src/time/mktime.c",
    "src/time/nanosleep.c",
    "src/time/strftime.c",
    "src/time/strptime.c",
    "src/time/time.c",
    "src/time/timegm.c",
    #"src/time/timer_create.c", # Requires pthread
    #"src/time/timer_delete.c", # Requires pthread
    #"src/time/timer_getoverrun.c", # Requires pthread
    #"src/time/timer_gettime.c", # Requires pthread
    #"src/time/timer_settime.c", # Requires pthread
    #"src/time/times.c", # Basically returns the 4 linux clocks, which we don't support.
    "src/time/timespec_get.c",
    "src/time/utime.c",
    "src/time/wcsftime.c",
  ]

at_header_obj = libc_env.AlltypesHeaderBuilder("bits/alltypes", ["#/arch/x86_64/bits/alltypes", "#/include/alltypes"])

lib_obj = [ ]
for f in dependencies:
  lib_obj = lib_obj + [ libc_env.Object(f) ]

libc_env.Depends("*.c", "bits/alltypes.h")

Return ('lib_obj')